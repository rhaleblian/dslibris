#!/usr/bin/env bash
# Attempts to set up a machine that has never seen anything devkitPro-related before.
# Take it with a salt-grain; read it and do it yourself step by step.

packages="dkp-toolchain-vars default-arm7 devkitARM devkitarm-crtls devkitarm-rules devkitpro-keyring dstools grit libfat-nds libnds nds-bzip2 nds-freetype nds-libexpat nds-libpng nds-pkg-config nds-zlib ndstool"
ext=none
mgr=none
pacman=pacman
arch=$(uname -m)
system=$(uname -s)

case $system in
	Darwin)
	mgr=pkg
	ext=pkg
	pacman=dkp-pacman
	;;
	Linux)
	if [ -f /etc/arch-release ]
	then
		pacman=pacman
		mgr=pacman
		ext=none
	fi
	if [ -f /etc/debian-version ]
	then
		mgr=apt
		ext=deb
		pacman=dkp-pacman
	fi
	;;
	*)
	echo fatal: system $system unknown.	
	exit 1
	;;
esac

case $arch in
	arm64)
	arch=arm64
	;;
	aarch64)
	arch=arm64
	;;
	x86_64)
	arch=amd64
	;;
	*)
	echo fatal: arch $arch unknown.
	exit 1
	;;
esac

if [ $ext == pkg ] || [ $ext == deb ]
then
	pacball=none
	case $ext in
		pkg)
		pacball=devkitpro-pacman-installer.pkg
		;;
		deb)
		pacball=devkitpro-pacman.$arch.deb
		;;
	esac

	wget https://github.com/devkitPro/pacman/releases/download/v1.0.2/$pacball

	case $system in
		Darwin)
		sudo installer -pkg $pacball -target /
		;;
		Linux)
		sudo apt install wget gdebi-core -y
		sudo gdebi -n devkitpro-pacman.$arch.deb
		;;
	esac

	sudo $pacman -S --noconfirm $packages

	rm $pacball
fi

# if [ $mgr == pacman ]
# then
# 	echo 'For pacman-native systems, see DevkitPro online doc to add repos.'
# 	sudo $pacman -S --noconfirm $packages
# fi
